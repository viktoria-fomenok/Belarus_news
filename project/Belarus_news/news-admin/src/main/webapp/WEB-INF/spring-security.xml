<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:security="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		                         http://www.springframework.org/schema/security
		                         http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <beans:import resource="spring-dispatcher-servlet.xml"/>
    <security:http auto-config="true" use-expressions="true">
        <logout logout-success-url="/login" invalidate-session="true" logout-url="/logout" />
        <intercept-url pattern="/login*" access="permitAll"/>
        <intercept-url pattern="/resources/**" access="permitAll"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>
		
        <form-login
                login-page="/login"
				default-target-url="/news/" 
                authentication-failure-url="/login?error"/>
				
    </security:http>

    <security:global-method-security secured-annotations="enabled"/>
    <security:authentication-manager>
        <authentication-provider>
            <password-encoder hash="md5"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "SELECT user_login, user_password, 1 FROM USERS WHERE user_login = ?"
                               authorities-by-username-query=
                                       "SELECT user_login, rls_name FROM USERS INNER JOIN ROLES ON USERS.user_id = ROLES.rls_user_id WHERE user_login = ?"/>
        </authentication-provider>
    </security:authentication-manager>
</beans:beans> 